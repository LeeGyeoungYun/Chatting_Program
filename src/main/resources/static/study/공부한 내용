1. 이클립스 안에서 자바스크립트의 타이핑 색깔이 흑백일경우 색상 변경을 원한다면?

-> 이클립스 Window -> Preference -> General태그안에 Editors 안에 File Associations로 들어가 
	File Type안에 .js가 있는지 확인 만약 없다면 옆 add를 눌러 .js 적고 생성. 
	이후, 이클립스 상단에 있는 Help -> Install New Software... 
	-> Add를 눌러 주소창에  http://download.eclipse.org/releases/photon 넣기
	-> Web, XML, Java EE and OSGi Enterprise Development 탭안에     JavaScript Development Tools	선택후 다운
	-> 이클립스 재실행후, 다시 Window -> Preference -> General태그안에 Editors 안에 File Associations로 들어가 .js클릭
	-> 아래 칸에보면 JavaScript Editor를 default로 변경해주면 색상을 입힐 수 있게됩니다.
	
	참고자료 : https://ysyeee.tistory.com/18
	
	
2. An error has occurred. See error log for more details.com.ibm.icu.text.UTF16.isSurrogate(C)Z  오류발생

-> 해당 오류는 Eclipse IDE에 맞지 않는 버전의 Spring Tools 플러그인을 추가했을 경우 생기는 오류입니다. 최근에 추가한 플러그인이 무엇인지 확인


3. Uncaught ReferenceError: submit is not defined at HTMLButtonElement.onclick 오류

-> input이든 button이든 태그안에  onclick 이벤트 핸들러는 전역(global)함수만 찾기 때문에 함수를 찾을 수 없다는 오류가 간혹 발생한다.
      때문에 id나 class를 활용해 이벤트 처리 함수를 호출하는게 좋습니다.
   ex) html  -> <button id="buttonBtn" onclick="submit()">버튼</button>  => (X) 잘못된예시
       
       html  ->	<button id="buttonBtn">버튼</button> => (O) 잘된 예시
	   JS    -> document.getElementById('buttonBtn').addEventListener("click",submit);
	   
	   			funtion submit(){
	   				// 함수 내용들
	   			}
	   			
	   			
4. 회원가입시 해당 이메일이 이미 사용되고있는 곳이 있는지 확인하기위해 REST API 방식으로 해당 메일값을 보내 유저정보가 있는지 확인할때 에러
			
			< 스프링이 .을 기준으로 url을 인식 오류 발생 >    
			
	문제발생 : 회원가입시 해당 이메일이 사용되고 있으면 회원가입이 안되게 처리 하였음
	                 그 과정에서 해당 이메일을 DB에서 조회해야했고 REST방식으로 일을 처리하려고함
	                 컨트롤러에서 JSP에서 보낸 이메일을 @PathVariable을 통해 받는 과정에서 
		        이메일중 도메인 부분 ex) naver.com 중 마침표를 포함한 " .com " 부분이 잘려들어오는 상황이 발생
		        때문에 해당 이메일을 가지고 있는 db를 조회할때 exam@naver 만 where 절에 들어가 값이 제대로 출력이 안되는 상황이 발생.
		        
	해결방안 : 	해당 문제는 @PathVariable을 통해 이메일을 보낼때 . 을 String 즉, 문자열중 하나인 문자로 판단하는것이 아닌 
		        확장자로써 인식이되어 .을 포함한 이후의 것을 잘라서 보내졌기때문에 발생된 오류였음. 즉, 근본적인 해결방안으로써 .을 확장자로 인식하지 못하게
		        할 필요가 있음. 따라서 다음과 같이 표기하면 해당 문제를 해결할 수 있음.
		        
		        
		    -> ex) @GetMapping("/user/{email}")  (X)
		           @GetMapping("/user/{email:.+"}) (O)
		           
		           @GetMapping("/user/{email:.+}/}) -> 만약 위 방식이 안된다면 다음과 같이하면됨. 
		           
		          
5. 자바스크립트 함수를 호출할 때 a태그를 사용하여 호출하는 경우

	1. href를 이용한 자바스크립트 함수 호출방법
	ex) <a href="javascript:function1();">함수1</a>
	
	2. onclick 이벤트를 이용하여 함수를 호출하는 방법
	ex) <a href="#" onclick="function2();">함수2</a>
	
	        
6. 게시판 제작 도중 mariaDB안에 있는 데이터를 꺼내는 와중에 view 단에서 한글이 인코딩이 되지않아 ???로 뜨는 현상이 발생했을때 해결방안

	문제발생 : 나의 경우엔 마리아DB안엔 한글로된 데이터가 정상적으로 들어와있었지만 이것을 JSP단에 출력을할때 한글이 인코딩되지않아 ???로 떴었다.
			그래서 먼저 JSP부분을 보았다. JSP 맨위에  <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>확인.
			그다음 head부분에  <meta charset="utf-8"> 이 제대로 들어와있는지 확인하였다.
			그래도 상황이 똑같아 이클립스 환경설정에 문제로 판단. 환경설정에서 General > Content Types > Java Class File 클릭후 맨아래 인코딩란에 UTF-8 적용
			그 후 다른 html, css, jsp, xml, workspace 등등 다 UTF-8로 적용.
			변화 확인해봤지만 똑같았다. 그래서 서버 문제로 판단 -> 톰캣에 server.xml에서 Connector 부분에  URIEncoding="UTF-8"로 적용후 서버 재가동
			-> 똑같음.
			혹시나해서 개발자도구를 열어 rest api를 이용해 데이터를 받아올때의 해당 네트워크 응답헤더를 확인해봄.
			그런데 응답헤더에  Content-Type이 application/json;charset=ISO 뭐시기가 들어온것을 확인함.
	
	해결방안 : 즉, 저 응답헤더에 Content-Type을 application/json;charset=UTF-8으로 바꿔야만 한글이 인코딩되어 ???가 아닌 정상적으로 출력되게됨.
			서버단 즉, 컨트롤러부분에 ResponseEntity를 통해 값을 응답할때, Header부분을 작성하여 포함시켜 보내면되는것을 깨달음.
			
				ex)	// 게시판 조회
					@GetMapping("/boards")
					public ResponseEntity<String> getAllBoards(){	
						String allBoards = this.boardService.getAllboards(); //게시물 객체정보들
						HttpHeaders resHeaders = new HttpHeaders();
					    resHeaders.add("Content-Type", "application/json;charset=UTF-8");
						System.out.println(allBoards);
						return new ResponseEntity<>(allBoards,resHeaders,HttpStatus.OK);
					}  
					
			다음과 같이 Header 객체를 선언. 그 후 Content-Type을 UTF-8을 추가후 반환 -> 정상적으로 작동하게 됨.
			
			혹은 컨트롤러를 선언하는곳에 예를들어 @controller
									 @RequestMapping(value="/api", produces = "application/json;charset=UTF-8")
									 public class BoardApiContainer{
									 	
									 }
									 
									 이렇게 구성하게되면 응답헤더를 따로 만들 필요없이 정상적으로 UTF-8로 바뀐후 전송이 되어진다.
	
			
			
			참고자료 : https://m.blog.naver.com/tonguck/221825624110

			
7. 스프링 레거시로 게시판을 구성하는 도중 AOP를 사용한 @Transactional을 이용하는 일이 생겼다. 두가지이상 DB작업이 이뤄질때 주로 사용되는것으로
	자주 이용이된다. 그때, Unable to load cache item이라는 에러가 발생되었다.
	
	문제 발생 : 기존 프로젝트 구성시 Service와 ServiceImpl을 DAO DAOImpl을 따로 만드는 작업을 수행하다가 이번 프로젝트에서는 인터페이스를 
			만들지않고 java 클래스파일만 만들어서 수행하고있었다.
			어느떄처럼 pom.xml에 AOP를 구성할때 필요한 라이브러리를 구성하고 root-context.xml 파일또한 구성을 마치고 @Transactional을
			사용. 하지만 위와 같은 에러가 발생하게된다.
			
	해결방안 : AOP는 AOP와 트랜잭션은 서비스 인터페이스에서 처리한다고한다. 
			스프링에서 AOP를 구현할 때 JDK의 기본 프록시를 사용하는데, 이 프록시는 인터페이스 기반으로 동작하기 때문에 Service인터페이스를 만들어 사용해야만한다.
			
			때문에, 트랜잭션이 필요한 부분만 따로 Service와 ServiceImpl을 구성해 사용하였다.
			

8. REST API를 이용하여 데이터를 요청하고 받아올때 GET방식을 이용하면 응답헤더 Content-Type이 text/html;charset=UTF-8; 형식이고
   POST 방식으로 요청하고 받아올땐 application/json형식으로 해야한다.
   
  
   
9. 뷰단에서 보낸 데이터를 받아올때 @RequestBody를 이용해 보통 받는데 @RequestBody는 두개이상을 쓰지못한다 즉, 한개만 이용가능하다.
	       			
